{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rivie\\\\WebstormProjects\\\\react-app\\\\src\\\\Componets\\\\PostForm.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport MyInput from \"./UI/input/MyInput\";\nimport MyButton from \"./UI/button/MyButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostForm = ({\n  createPost\n}) => {\n  _s();\n  // Состояние двух input (какие данные введены в строки)\n  const [post, setPost] = React.useState({\n    title: '',\n    body: ''\n  });\n\n  // Добавление нового поста\n  const addPost = e => {\n    e.preventDefault();\n    const newPost = {\n      id: Date.now(),\n      ...post\n    };\n    createPost(newPost);\n    setPost({\n      ...post,\n      title: '',\n      body: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(MyInput, {\n      value: post.title,\n      onChange: e => setPost({\n        ...post,\n        title: e.target.value\n      }),\n      type: \"text\",\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0437\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A \\u043D\\u043E\\u0432\\u043E\\u0439 \\u0437\\u0430\\u043F\\u0438\\u0441\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n      value: post.dbody,\n      onChange: e => setPost({\n        ...post,\n        body: e.target.value\n      }),\n      type: \"text\",\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043A\\u0441\\u0442 \\u043D\\u043E\\u0432\\u043E\\u0439 \\u0437\\u0430\\u043F\\u0438\\u0441\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: addPost,\n      children: \"\\u0417\\u0430\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(PostForm, \"bmg7/veTUOVnpurxQrmjNj+REHg=\");\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","MyInput","MyButton","jsxDEV","_jsxDEV","PostForm","createPost","_s","post","setPost","useState","title","body","addPost","e","preventDefault","newPost","id","Date","now","children","value","onChange","target","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","dbody","onClick","_c","$RefreshReg$"],"sources":["C:/Users/rivie/WebstormProjects/react-app/src/Componets/PostForm.jsx"],"sourcesContent":["import React from 'react';\r\nimport MyInput from \"./UI/input/MyInput\";\r\nimport MyButton from \"./UI/button/MyButton\";\r\n\r\nconst PostForm = ({createPost}) => {\r\n    // Состояние двух input (какие данные введены в строки)\r\n    const [post, setPost] = React.useState({title: '', body: ''});\r\n\r\n    // Добавление нового поста\r\n    const addPost = (e) => {\r\n        e.preventDefault()\r\n        const newPost = {\r\n            id: Date.now(),\r\n            ...post\r\n        }\r\n        createPost(newPost);\r\n        setPost({...post, title: '', body: ''})\r\n    }\r\n\r\n    return (\r\n        <form>\r\n\r\n            <MyInput\r\n                value={post.title}\r\n                onChange={(e) => setPost({...post, title: e.target.value})}\r\n                type=\"text\"\r\n                placeholder=\"Введите заголовок новой записи\"\r\n            />\r\n            <MyInput\r\n                value={post.dbody}\r\n                onChange={(e) => setPost({...post, body: e.target.value})}\r\n                type=\"text\"\r\n                placeholder=\"Введите текст новой записи\"\r\n            />\r\n            <MyButton onClick={addPost}>Записать</MyButton>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default PostForm;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,QAAQ,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,QAAQ,GAAGA,CAAC;EAACC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC/B;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAAC;IAACC,KAAK,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAE,CAAC,CAAC;;EAE7D;EACA,MAAMC,OAAO,GAAIC,CAAC,IAAK;IACnBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,OAAO,GAAG;MACZC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACd,GAAGX;IACP,CAAC;IACDF,UAAU,CAACU,OAAO,CAAC;IACnBP,OAAO,CAAC;MAAC,GAAGD,IAAI;MAAEG,KAAK,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAE,CAAC,CAAC;EAC3C,CAAC;EAED,oBACIR,OAAA;IAAAgB,QAAA,gBAEIhB,OAAA,CAACH,OAAO;MACJoB,KAAK,EAAEb,IAAI,CAACG,KAAM;MAClBW,QAAQ,EAAGR,CAAC,IAAKL,OAAO,CAAC;QAAC,GAAGD,IAAI;QAAEG,KAAK,EAAEG,CAAC,CAACS,MAAM,CAACF;MAAK,CAAC,CAAE;MAC3DG,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eACFzB,OAAA,CAACH,OAAO;MACJoB,KAAK,EAAEb,IAAI,CAACsB,KAAM;MAClBR,QAAQ,EAAGR,CAAC,IAAKL,OAAO,CAAC;QAAC,GAAGD,IAAI;QAAEI,IAAI,EAAEE,CAAC,CAACS,MAAM,CAACF;MAAK,CAAC,CAAE;MAC1DG,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACFzB,OAAA,CAACF,QAAQ;MAAC6B,OAAO,EAAElB,OAAQ;MAAAO,QAAA,EAAC;IAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEf,CAAC;AAACtB,EAAA,CAjCIF,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAmCd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}