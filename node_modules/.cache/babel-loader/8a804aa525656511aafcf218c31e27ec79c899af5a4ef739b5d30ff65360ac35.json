{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rivie\\\\WebstormProjects\\\\react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from \"react\";\nimport \"./styles/App.css\";\nimport AllPosts from \"./Componets/AllPosts\";\nimport PostForm from \"./Componets/PostForm\";\nimport MySelect from \"./Componets/UI/select/MySelect\";\nimport MyInput from \"./Componets/UI/input/MyInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Хранит все посты на странице\n  const [posts, setPosts] = React.useState([{\n    id: 1,\n    title: 'Javascript',\n    description: 'This language is not as easy as I thought it would be.....'\n  }, {\n    id: 2,\n    title: 'Python',\n    description: 'Best times in my life'\n  }, {\n    id: 3,\n    title: 'C++',\n    description: 'You lost 2gb or RAM because of carelessness'\n  }]);\n  const [selectedSort, setSelectedSort] = React.useState('');\n  const [searchQuery, setSearchQuery] = React.useState('');\n  function getSortedPosts() {\n    console.log('работает вроде');\n    if (selectedSort) {\n      return [...posts].sort((a, b) => a[selectedSort].localeCompare(b[selectedSort]));\n    }\n    return posts;\n  }\n  const sortedPosts = useMemo(() => {}, [selectedSort, posts]);\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n  };\n\n  // Получаем id поста для удаления из дочернего компонента\n  const deletePost = id => {\n    setPosts(posts.filter(p => p.id !== id));\n  };\n  const sortPosts = sort => {\n    //sort - параметр, по которому сортируем посты\n    setSelectedSort(sort);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(PostForm, {\n      createPost: createPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: \"10px 0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MyInput, {\n        value: searchQuery,\n        onChange: e => {\n          setSearchQuery(e.target.value);\n        },\n        className: MyInput,\n        placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n        value: selectedSort,\n        onChange: sortPosts,\n        sortOptions: [{\n          value: 'title',\n          name: 'По названию'\n        }, {\n          value: 'description',\n          name: 'По описанию'\n        }],\n        defaultValue: \"\\u0421\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), posts.length > 0 ? /*#__PURE__*/_jsxDEV(AllPosts, {\n      posts: sortedPosts,\n      title: \"Записи:\",\n      deletePost: deletePost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"\\u041D\\u0435\\u0442 \\u043D\\u0438 \\u043E\\u0434\\u043D\\u043E\\u0439 \\u0437\\u0430\\u043F\\u0438\\u0441\\u0438...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"Ly/zXtf2fXCzF4CJcJX6GwjxVZM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useMemo","AllPosts","PostForm","MySelect","MyInput","jsxDEV","_jsxDEV","App","_s","posts","setPosts","useState","id","title","description","selectedSort","setSelectedSort","searchQuery","setSearchQuery","getSortedPosts","console","log","sort","a","b","localeCompare","sortedPosts","createPost","newPost","deletePost","filter","p","sortPosts","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","margin","value","onChange","e","target","placeholder","sortOptions","name","defaultValue","length","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/rivie/WebstormProjects/react-app/src/App.js"],"sourcesContent":["import React, {useMemo} from \"react\";\r\nimport \"./styles/App.css\"\r\nimport AllPosts from \"./Componets/AllPosts\";\r\nimport PostForm from \"./Componets/PostForm\";\r\nimport MySelect from \"./Componets/UI/select/MySelect\";\r\nimport MyInput from \"./Componets/UI/input/MyInput\";\r\n\r\nfunction App() {\r\n    // Хранит все посты на странице\r\n    const [posts, setPosts] = React.useState([\r\n        {id: 1, title: 'Javascript', description: 'This language is not as easy as I thought it would be.....'},\r\n        {id: 2, title: 'Python', description: 'Best times in my life'},\r\n        {id: 3, title: 'C++', description: 'You lost 2gb or RAM because of carelessness'}\r\n    ]);\r\n    const [selectedSort, setSelectedSort] = React.useState('')\r\n    const [searchQuery, setSearchQuery] = React.useState('');\r\n\r\n    function getSortedPosts() {\r\n        console.log('работает вроде')\r\n        if(selectedSort) {\r\n            return [...posts].sort((a, b) => a[selectedSort].localeCompare(b[selectedSort]))\r\n        }\r\n        return posts;\r\n    }\r\n\r\n    const sortedPosts = useMemo(() => {\r\n\r\n    }, [selectedSort, posts])\r\n\r\n    const createPost = (newPost) => {\r\n        setPosts([...posts, newPost])\r\n    }\r\n\r\n    // Получаем id поста для удаления из дочернего компонента\r\n    const deletePost = (id) => {\r\n        setPosts(posts.filter(p => p.id !== id))\r\n    }\r\n\r\n    const sortPosts = (sort) => { //sort - параметр, по которому сортируем посты\r\n        setSelectedSort(sort)\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <PostForm createPost={createPost}/>\r\n            <hr style={{margin: \"10px 0\"}}/>\r\n            <div>\r\n                <MyInput\r\n                    value={searchQuery}\r\n                    onChange={(e) => {setSearchQuery(e.target.value)}}\r\n                    className={MyInput}\r\n                    placeholder=\"Поиск\"\r\n                />\r\n                <MySelect\r\n                    value={selectedSort}\r\n                    onChange={sortPosts}\r\n                    sortOptions={[\r\n                        {value: 'title', name: 'По названию'},\r\n                        {value: 'description', name: 'По описанию'}\r\n                    ]}\r\n                    defaultValue=\"Сортировка\"\r\n                />\r\n            </div>\r\n            {posts.length > 0\r\n                ? <AllPosts posts={sortedPosts} title={\"Записи:\"} deletePost={deletePost}/>\r\n                : <h1 style={{textAlign: \"center\"}}>Нет ни одной записи...</h1>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}